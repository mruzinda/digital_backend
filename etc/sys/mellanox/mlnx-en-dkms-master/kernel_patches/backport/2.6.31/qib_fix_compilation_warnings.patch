ib: fix compilation warnings

Fix the following compilation warning:
drivers/infiniband/hw/qib/qib_dma.c: In function 'qib_dma_map_single':
drivers/infiniband/hw/qib/qib_dma.c:57: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_dma.c: In function 'qib_dma_map_page':
drivers/infiniband/hw/qib/qib_dma.c:79: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_dma.c: In function 'qib_map_sg':
drivers/infiniband/hw/qib/qib_dma.c:105: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_dma.c: In function 'qib_sg_dma_address':
drivers/infiniband/hw/qib/qib_dma.c:124: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_dma.c: In function 'qib_dma_alloc_coherent':
drivers/infiniband/hw/qib/qib_dma.c:158: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_keys.c: In function 'qib_lkey_ok':
drivers/infiniband/hw/qib/qib_keys.c:160: warning: cast to pointer from integer of different size
drivers/infiniband/hw/qib/qib_keys.c: In function 'qib_rkey_ok':
drivers/infiniband/hw/qib/qib_keys.c:255: warning: cast to pointer from integer of different size
drivers/infiniband/hw/qib/qib_mr.c: In function 'qib_reg_phys_mr':
drivers/infiniband/hw/qib/qib_mr.c:168: warning: cast to pointer from integer of different size
drivers/infiniband/hw/qib/qib_mr.c: In function 'qib_reg_user_mr':
drivers/infiniband/hw/qib/qib_mr.c:237: warning: cast from pointer to integer of different size
drivers/infiniband/hw/qib/qib_mr.c: In function 'qib_map_phys_fmr':
drivers/infiniband/hw/qib/qib_mr.c:399: warning: cast to pointer from integer of different size
drivers/infiniband/hw/qib/qib_pcie.c: In function 'qib_pcie_ddinit':
drivers/infiniband/hw/qib/qib_pcie.c:194: warning: right shift count >= width of type
drivers/infiniband/hw/qib/qib_sdma.c: In function 'dump_sdma_state':
drivers/infiniband/hw/qib/qib_sdma.c:750: warning: format '%016llx' expects type 'long long unsigned int', but argument 10 has type 'dma_addr_t'
drivers/infiniband/hw/qib/qib_trace.c: In function 'qib_trace_put':
drivers/infiniband/hw/qib/qib_trace.c:765: warning: format '%lu' expects type 'long unsigned int', but argument 3 has type 'size_t'
drivers/infiniband/hw/qib/qib_trace.c: In function 'qib_trace_read':
drivers/infiniband/hw/qib/qib_trace.c:1085: warning: format '%ld' expects type 'long int', but argument 3 has type 'ssize_t'
drivers/infiniband/hw/qib/qib_iba7220.c: In function 'qib_setup_7220_setextled':
drivers/infiniband/hw/qib/qib_iba7220.c:1856: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7220.c: In function 'qib_7220_put_tid':
drivers/infiniband/hw/qib/qib_iba7220.c:2302: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7220.c:2311: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7220.c: In function 'qib_7220_tidtemplate':
drivers/infiniband/hw/qib/qib_iba7220.c:2371: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7220.c:2373: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7322.c: In function 'qib_setup_7322_setextled':
drivers/infiniband/hw/qib/qib_iba7322.c:2698: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7322.c: In function 'qib_7322_put_tid':
drivers/infiniband/hw/qib/qib_iba7322.c:3758: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7322.c:3767: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7322.c: In function 'qib_7322_tidtemplate':
drivers/infiniband/hw/qib/qib_iba7322.c:3834: warning: left shift count >= width of type
drivers/infiniband/hw/qib/qib_iba7322.c:3836: warning: left shift count >= width of type

Signed-off-by: Dotan Barak <dotanb@dev.mellanox.co.il>

---

 drivers/infiniband/hw/qib/qib_dma.c     |   10 +++++-----
 drivers/infiniband/hw/qib/qib_iba7220.c |   10 +++++-----
 drivers/infiniband/hw/qib/qib_iba7322.c |   10 +++++-----
 drivers/infiniband/hw/qib/qib_keys.c    |    4 ++--
 drivers/infiniband/hw/qib/qib_mr.c      |    6 +++---
 drivers/infiniband/hw/qib/qib_pcie.c    |    2 +-
 drivers/infiniband/hw/qib/qib_sdma.c    |    2 +-
 drivers/infiniband/hw/qib/qib_trace.c   |    4 ++--
 8 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/drivers/infiniband/hw/qib/qib_dma.c b/drivers/infiniband/hw/qib/qib_dma.c
index f84085e..d8e9893 100644
--- a/drivers/infiniband/hw/qib/qib_dma.c
+++ b/drivers/infiniband/hw/qib/qib_dma.c
@@ -54,7 +54,7 @@ static u64 qib_dma_map_single(struct ib_device *dev, void *cpu_addr,
 			      size_t size, enum dma_data_direction direction)
 {
 	BUG_ON(!valid_dma_direction(direction));
-	return (u64) cpu_addr;
+	return (u64)(unsigned long) cpu_addr;
 }
 
 static void qib_dma_unmap_single(struct ib_device *dev, u64 addr, size_t size,
@@ -76,7 +76,7 @@ static u64 qib_dma_map_page(struct ib_device *dev, struct page *page,
 		goto done;
 	}
 
-	addr = (u64) page_address(page);
+	addr = (u64)(unsigned long) page_address(page);
 	if (addr)
 		addr += offset;
 	/* TODO: handle highmem pages */
@@ -102,7 +102,7 @@ static int qib_map_sg(struct ib_device *dev, struct scatterlist *sgl,
 	BUG_ON(!valid_dma_direction(direction));
 
 	for_each_sg(sgl, sg, nents, i) {
-		addr = (u64) page_address(sg_page(sg));
+		addr = (u64)(unsigned long) page_address(sg_page(sg));
 		/* TODO: handle highmem pages */
 		if (!addr) {
 			ret = 0;
@@ -121,7 +121,7 @@ static void qib_unmap_sg(struct ib_device *dev,
 
 static u64 qib_sg_dma_address(struct ib_device *dev, struct scatterlist *sg)
 {
-	u64 addr = (u64) page_address(sg_page(sg));
+	u64 addr = (u64)(unsigned long) page_address(sg_page(sg));
 
 	if (addr)
 		addr += sg->offset;
@@ -155,7 +155,7 @@ static void *qib_dma_alloc_coherent(struct ib_device *dev, size_t size,
 	if (p)
 		addr = page_address(p);
 	if (dma_handle)
-		*dma_handle = (u64) addr;
+		*dma_handle = (u64)(unsigned long) addr;
 	return addr;
 }
 
diff --git a/drivers/infiniband/hw/qib/qib_iba7220.c b/drivers/infiniband/hw/qib/qib_iba7220.c
index 63f6d7f..021fb54 100644
--- a/drivers/infiniband/hw/qib/qib_iba7220.c
+++ b/drivers/infiniband/hw/qib/qib_iba7220.c
@@ -490,8 +490,8 @@ static inline u32 read_7220_creg32(const struct qib_devdata *dd, u16 regno)
  * and 7 is reserved.  We currently use only 2KB and 4KB
  */
 #define IBA7220_TID_SZ_SHIFT 37 /* shift to 3bit size selector */
-#define IBA7220_TID_SZ_2K (1UL << IBA7220_TID_SZ_SHIFT) /* 2KB */
-#define IBA7220_TID_SZ_4K (2UL << IBA7220_TID_SZ_SHIFT) /* 4KB */
+#define IBA7220_TID_SZ_2K (1ULL << IBA7220_TID_SZ_SHIFT) /* 2KB */
+#define IBA7220_TID_SZ_4K (2ULL << IBA7220_TID_SZ_SHIFT) /* 4KB */
 #define IBA7220_TID_PA_SHIFT 11U /* TID addr in chip stored w/o low bits */
 #define PBC_7220_VL15_SEND (1ULL << 63) /* pbc; VL15, no credit check */
 #define PBC_7220_VL15_SEND_CTRL (1ULL << 31) /* control version of same */
@@ -1853,8 +1853,8 @@ static void qib_setup_7220_setextled(struct qib_pportdata *ppd, u32 on)
 		 * This is 1/16 sec (66.6ms) on,
 		 * 3/16 sec (187.5 ms) off, with packets rcvd
 		 */
-		ledblink = ((66600 * 1000UL / 4) << IBA7220_LEDBLINK_ON_SHIFT)
-			| ((187500 * 1000UL / 4) << IBA7220_LEDBLINK_OFF_SHIFT);
+		ledblink = ((66600 * 1000ULL / 4) << IBA7220_LEDBLINK_ON_SHIFT)
+			| ((187500 * 1000ULL / 4) << IBA7220_LEDBLINK_OFF_SHIFT);
 	}
 	if (lst == IB_PORT_ACTIVE)
 		extctl |= SYM_MASK(EXTCtrl, LEDPriPortYellowOn);
@@ -2299,7 +2299,7 @@ static void qib_7220_put_tid(struct qib_devdata *dd, u64 __iomem *tidptr,
 				    pa);
 			return;
 		}
-		if (chippa >= (1UL << IBA7220_TID_SZ_SHIFT)) {
+		if (chippa >= (1ULL << IBA7220_TID_SZ_SHIFT)) {
 			qib_dev_err(dd, "Physical page address 0x%lx "
 				"larger than supported\n", pa);
 			return;
diff --git a/drivers/infiniband/hw/qib/qib_iba7322.c b/drivers/infiniband/hw/qib/qib_iba7322.c
index 2d31c56..188cbda 100644
--- a/drivers/infiniband/hw/qib/qib_iba7322.c
+++ b/drivers/infiniband/hw/qib/qib_iba7322.c
@@ -191,8 +191,8 @@ MODULE_PARM_DESC(txselect, \
  * and 7 is reserved.  We currently use only 2KB and 4KB
  */
 #define IBA7322_TID_SZ_SHIFT QIB_7322_RcvTIDArray0_RT_BufSize_LSB
-#define IBA7322_TID_SZ_2K (1UL<<IBA7322_TID_SZ_SHIFT) /* 2KB */
-#define IBA7322_TID_SZ_4K (2UL<<IBA7322_TID_SZ_SHIFT) /* 4KB */
+#define IBA7322_TID_SZ_2K (1ULL<<IBA7322_TID_SZ_SHIFT) /* 2KB */
+#define IBA7322_TID_SZ_4K (2ULL<<IBA7322_TID_SZ_SHIFT) /* 4KB */
 #define IBA7322_TID_PA_SHIFT 11U /* TID addr in chip stored w/o low bits */
 
 #define SendIBSLIDAssignMask \
@@ -2695,8 +2695,8 @@ static void qib_setup_7322_setextled(struct qib_pportdata *ppd, u32 on)
 		 * This is 1/16 sec (66.6ms) on,
 		 * 3/16 sec (187.5 ms) off, with packets rcvd.
 		 */
-		ledblink = ((66600 * 1000UL / 4) << IBA7322_LEDBLINK_ON_SHIFT) |
-			((187500 * 1000UL / 4) << IBA7322_LEDBLINK_OFF_SHIFT);
+		ledblink = ((66600 * 1000ULL / 4) << IBA7322_LEDBLINK_ON_SHIFT) |
+			((187500 * 1000ULL / 4) << IBA7322_LEDBLINK_OFF_SHIFT);
 	}
 	if (yel)
 		extctl |= ppd->port == 1 ? ExtLED_IB1_YEL : ExtLED_IB2_YEL;
@@ -3755,7 +3755,7 @@ static void qib_7322_put_tid(struct qib_devdata *dd, u64 __iomem *tidptr,
 				    pa);
 			return;
 		}
-		if (chippa >= (1UL << IBA7322_TID_SZ_SHIFT)) {
+		if (chippa >= (1ULL << IBA7322_TID_SZ_SHIFT)) {
 			qib_dev_err(dd, "Physical page address 0x%lx "
 				"larger than supported\n", pa);
 			return;
diff --git a/drivers/infiniband/hw/qib/qib_keys.c b/drivers/infiniband/hw/qib/qib_keys.c
index 3e2f59f..8709620 100644
--- a/drivers/infiniband/hw/qib/qib_keys.c
+++ b/drivers/infiniband/hw/qib/qib_keys.c
@@ -157,7 +157,7 @@ int qib_lkey_ok(struct qib_lkey_table *rkt, struct qib_pd *pd,
 		spin_unlock_irqrestore(&rkt->lock, flags);
 
 		isge->mr = dev->dma_mr;
-		isge->vaddr = (void *) sge->addr;
+		isge->vaddr = (void *)(unsigned long) sge->addr;
 		isge->length = sge->length;
 		isge->sge_length = sge->length;
 		isge->m = 0;
@@ -252,7 +252,7 @@ int qib_rkey_ok(struct qib_qp *qp, struct qib_sge *sge,
 		spin_unlock_irqrestore(&rkt->lock, flags);
 
 		sge->mr = dev->dma_mr;
-		sge->vaddr = (void *) vaddr;
+		sge->vaddr = (void *)(unsigned long) vaddr;
 		sge->length = len;
 		sge->sge_length = len;
 		sge->m = 0;
diff --git a/drivers/infiniband/hw/qib/qib_mr.c b/drivers/infiniband/hw/qib/qib_mr.c
index df34a73..0093f3f 100644
--- a/drivers/infiniband/hw/qib/qib_mr.c
+++ b/drivers/infiniband/hw/qib/qib_mr.c
@@ -165,7 +165,7 @@ struct ib_mr *qib_reg_phys_mr(struct ib_pd *pd,
 	m = 0;
 	n = 0;
 	for (i = 0; i < num_phys_buf; i++) {
-		mr->mr.map[m]->segs[n].vaddr = (void *) buffer_list[i].addr;
+		mr->mr.map[m]->segs[n].vaddr = (void *)(unsigned long) buffer_list[i].addr;
 		mr->mr.map[m]->segs[n].length = buffer_list[i].size;
 		mr->mr.length += buffer_list[i].size;
 		n++;
@@ -235,7 +235,7 @@ struct ib_mr *qib_reg_user_mr(struct ib_pd *pd, u64 start, u64 length,
 	if (is_power_of_2(umem->page_size)) {
 		mr->mr.page_shift = ilog2(umem->page_size);
 		qib_dbg("mr %llx using page_shift optimization %u\n",
-			(unsigned long long)mr, mr->mr.page_shift);
+			(unsigned long long)(unsigned long)mr, mr->mr.page_shift);
 	}
 	m = 0;
 	n = 0;
@@ -396,7 +396,7 @@ int qib_map_phys_fmr(struct ib_fmr *ibfmr, u64 *page_list,
 	m = 0;
 	n = 0;
 	for (i = 0; i < list_len; i++) {
-		fmr->mr.map[m]->segs[n].vaddr = (void *) page_list[i];
+		fmr->mr.map[m]->segs[n].vaddr = (void *)(unsigned long) page_list[i];
 		fmr->mr.map[m]->segs[n].length = ps;
 		if (++n == QIB_SEGSZ) {
 			m++;
diff --git a/drivers/infiniband/hw/qib/qib_pcie.c b/drivers/infiniband/hw/qib/qib_pcie.c
index a004db9..9aaacb1 100644
--- a/drivers/infiniband/hw/qib/qib_pcie.c
+++ b/drivers/infiniband/hw/qib/qib_pcie.c
@@ -191,7 +191,7 @@ int qib_pcie_ddinit(struct qib_devdata *dd, struct pci_dev *pdev,
 	 * BAR, just in case.
 	 */
 	dd->pcibar0 = addr;
-	dd->pcibar1 = addr >> 32;
+	dd->pcibar1 = (u64)addr >> 32;
 	dd->deviceid = ent->device; /* save for later use */
 	dd->vendorid = ent->vendor;
 
diff --git a/drivers/infiniband/hw/qib/qib_sdma.c b/drivers/infiniband/hw/qib/qib_sdma.c
index 878831c..4ec2f77 100644
--- a/drivers/infiniband/hw/qib/qib_sdma.c
+++ b/drivers/infiniband/hw/qib/qib_sdma.c
@@ -749,7 +749,7 @@ void dump_sdma_state(struct qib_pportdata *ppd)
 		dwoffset = (desc[0] & 0x7ffULL) << 2;
 		qib_cdbg(SDMA, "IB%u: sdmadesc[%u]: flags:%s addr:0x%016llx "
 			 "gen:%u len:%u bytes offset:%u bytes\n", ppd->port,
-			 head, flags, addr, gen, dwlen, dwoffset);
+			 head, flags, (unsigned long long)addr, gen, dwlen, dwoffset);
 		if (++head == ppd->sdma_descq_cnt)
 			head = 0;
 	}
diff --git a/drivers/infiniband/hw/qib/qib_trace.c b/drivers/infiniband/hw/qib/qib_trace.c
index 180ca20..2683ffe 100644
--- a/drivers/infiniband/hw/qib/qib_trace.c
+++ b/drivers/infiniband/hw/qib/qib_trace.c
@@ -763,7 +763,7 @@ static int qib_trace_put(struct qib_evt_buf *buf, int cpu, u64 tsc,
 	case QIB_EVT_BLOB:
 		if (val->len > maxblobsize) {
 			EPRINTK("truncation [%s] len=%lu maxblobsize=%u\n",
-				qib_evt_str(val->type), val->len, maxblobsize);
+				qib_evt_str(val->type), (unsigned long)val->len, maxblobsize);
 			val->len = maxblobsize;
 		}
 		memcpy(new->evt.data, val->blob, val->len);
@@ -1083,7 +1083,7 @@ static ssize_t qib_trace_read(struct file *file, char __user *ubuf,
 	file_accessed(file);
 	f->flags |= EVT_FLAG_DATA_TO_READ;
 	DPRINTK("copied successfully %ld bytes nevents=%u pid=%u\n",
-		ret, f->nevents, current->tgid);
+		(unsigned long)ret, f->nevents, current->tgid);
 bail:
 	return ret;
 }
