From 5fca34fb1195e6fffe57f84fbc0ff916c4405dff Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Mon, 30 Jul 2012 17:30:22 +0300
Subject: [PATCH] cancel_multiqueue

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/en_netdev.c |    9 ++++-----
 drivers/net/mlx4/en_tx.c     |   13 ++++++-------
 drivers/net/mlx4/mlx4_en.h   |    1 -
 3 files changed, 10 insertions(+), 13 deletions(-)

diff --git a/drivers/net/mlx4/en_netdev.c b/drivers/net/mlx4/en_netdev.c
index eef6974..fa71815 100644
--- a/drivers/net/mlx4/en_netdev.c
+++ b/drivers/net/mlx4/en_netdev.c
@@ -500,7 +500,7 @@ static void mlx4_en_tx_timeout(struct net_device *dev)
 		en_warn(priv, "Tx timeout called on port:%d\n", priv->port);
 
 	for (i = 0; i < priv->tx_ring_num; i++) {
-		if (!netif_tx_queue_stopped(netdev_get_tx_queue(dev, i)))
+		if (!netif_queue_stopped(dev))
 			continue;
 		en_info(priv, "TX timeout detected on queue: %d,\n"
 			"QP: 0x%x, CQ: 0x%x,\n"
@@ -940,7 +940,7 @@ int mlx4_en_start_port(struct net_device *dev)
 	queue_work(mdev->workqueue, &priv->mcast_task);
 
 	priv->port_up = true;
-	netif_tx_start_all_queues(dev);
+	netif_start_queue(dev);
 	return 0;
 
 tx_err:
@@ -978,7 +978,7 @@ void mlx4_en_stop_port(struct net_device *dev)
 	/* Synchronize with tx routine */
 	netif_tx_lock_bh(dev);
 	netif_carrier_off(dev);
-	netif_tx_stop_all_queues(dev);
+	netif_stop_queue(dev);
 	dev->trans_start = jiffies;
 	netif_tx_unlock_bh(dev);
 
@@ -1381,7 +1381,7 @@ int mlx4_en_init_netdev(struct mlx4_en_dev *mdev, int port,
 	int i;
 	int err;
 
-	dev = alloc_etherdev_mq(sizeof(struct mlx4_en_priv), prof->tx_ring_num);
+	dev = alloc_etherdev(sizeof(struct mlx4_en_priv));
 	if (dev == NULL) {
 		mlx4_err(mdev, "Net device allocation failed\n");
 		return -ENOMEM;
@@ -1457,7 +1457,6 @@ int mlx4_en_init_netdev(struct mlx4_en_dev *mdev, int port,
 	dev->open		= mlx4_en_open;
 	dev->stop		= mlx4_en_close;
 	dev->hard_start_xmit	= mlx4_en_xmit,
-	dev->select_queue	= mlx4_en_select_queue,
 	dev->get_stats		= mlx4_en_get_stats,
 	dev->set_multicast_list	= mlx4_en_set_multicast,
 	dev->set_mac_address	= mlx4_en_set_mac,
diff --git a/drivers/net/mlx4/en_tx.c b/drivers/net/mlx4/en_tx.c
index eeb70ea..e1833e6 100644
--- a/drivers/net/mlx4/en_tx.c
+++ b/drivers/net/mlx4/en_tx.c
@@ -396,9 +396,8 @@ static void mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq)
 	atomic_sub(txbbs_skipped, &ring->inflight);
 
 	/* Wakeup Tx queue if this ring stopped it */
-	if (netif_tx_queue_stopped(netdev_get_tx_queue(dev, cq->ring)) &&
-				   txbbs_skipped > 0) {
-		netif_tx_wake_queue(netdev_get_tx_queue(dev, cq->ring));
+	if (netif_queue_stopped(dev) && txbbs_skipped > 0) {
+		netif_wake_queue(dev);
 		ring->wake_queue++;
 	}
 }
@@ -557,7 +556,7 @@ static void build_inline_wqe(struct mlx4_en_tx_desc *tx_desc, struct sk_buff *sk
 	}
 }
 
-u16 mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb)
+static int mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb)
 {
 	struct mlx4_en_priv *priv = netdev_priv(dev);
 	u16 vlan_tag = 0;
@@ -663,7 +662,7 @@ int mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev)
 		goto tx_drop;
 	}
 
-	tx_ind = skb->queue_mapping;
+	tx_ind = mlx4_en_select_queue(dev, skb);
 	ring = priv->tx_ring[tx_ind];
 	if (priv->vlgrp && vlan_tx_tag_present(skb))
 		vlan_tag = vlan_tx_tag_get(skb);
@@ -672,13 +671,13 @@ int mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev)
 	inflight = atomic_read(&ring->inflight);
 	if (unlikely(inflight > ring->full_size)) {
 		/* every full Tx ring stops queue */
-		netif_tx_stop_queue(netdev_get_tx_queue(dev, tx_ind));
+		netif_stop_queue(dev);
 		ring->queue_stopped++;
 
 		/* Check again whether the queue was cleaned */
 		inflight = atomic_read(&ring->inflight);
 		if (inflight <= ring->full_size) {
-			netif_tx_wake_queue(netdev_get_tx_queue(dev, tx_ind));
+			netif_wake_queue(dev);
 			ring->wake_queue++;
 		} else
 			return NETDEV_TX_BUSY;
diff --git a/drivers/net/mlx4/mlx4_en.h b/drivers/net/mlx4/mlx4_en.h
index 34212e5..7db47ac 100644
--- a/drivers/net/mlx4/mlx4_en.h
+++ b/drivers/net/mlx4/mlx4_en.h
@@ -617,7 +617,6 @@ int mlx4_en_set_cq_moder(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq);
 int mlx4_en_arm_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq);
 
 void mlx4_en_tx_irq(struct mlx4_cq *mcq);
-u16 mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb);
 int mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev);
 
 int mlx4_en_create_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring,
-- 
1.7.8.2

