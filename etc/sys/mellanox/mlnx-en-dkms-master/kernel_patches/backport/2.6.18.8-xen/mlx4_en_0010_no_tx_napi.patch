diff --git a/drivers/net/mlx4/en_cq.c b/drivers/net/mlx4/en_cq.c
index 639dbb7..9f50bf6 100644
--- a/drivers/net/mlx4/en_cq.c
+++ b/drivers/net/mlx4/en_cq.c
@@ -124,8 +124,6 @@ int mlx4_en_activate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq, int cq
 	cq->mcq.event = mlx4_en_cq_event;
 
 	if (cq->is_tx) {
-		netif_napi_add(cq->dev, &cq->napi, mlx4_en_poll_tx_cq, MLX4_EN_TX_BUDGET);
-		napi_enable(&cq->napi);
 		mlx4_en_arm_cq(priv, cq);
 	} else {
 		netif_napi_add(cq->dev, &cq->napi, mlx4_en_poll_rx_cq, MLX4_EN_RX_BUDGET);
@@ -152,8 +150,10 @@ void mlx4_en_deactivate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq)
 {
 	struct mlx4_en_dev *mdev = priv->mdev;
 
-	napi_disable(&cq->napi);
-	netif_napi_del(&cq->napi);
+	if (!cq->is_tx) {
+		napi_disable(&cq->napi);
+		netif_napi_del(&cq->napi);
+	}
 
 	mlx4_cq_free(mdev->dev, &cq->mcq);
 }
diff --git a/drivers/net/mlx4/en_tx.c b/drivers/net/mlx4/en_tx.c
index 694058e..6ae6a51 100644
--- a/drivers/net/mlx4/en_tx.c
+++ b/drivers/net/mlx4/en_tx.c
@@ -334,7 +334,7 @@ void mlx4_en_set_prio_map(struct mlx4_en_priv *priv, u16 *prio_map, u32 ring_num
 	}
 }
 
-static int mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq, int budget)
+static void mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq)
 {
 	struct mlx4_en_priv *priv = netdev_priv(dev);
 	struct mlx4_cq *mcq = &cq->mcq;
@@ -348,10 +348,9 @@ static int mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq,
 	int size = cq->size;
 	u32 size_mask = ring->size_mask;
 	struct mlx4_cqe *buf = cq->buf;
-	int done = 0;
 
 	if (!priv->port_up)
-		return 0;
+		return;
 
 	index = cons_index & size_mask;
 	cqe = &buf[(index << factor) + factor];
@@ -359,7 +358,7 @@ static int mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq,
 
 	/* Process all completed CQEs */
 	while (XNOR(cqe->owner_sr_opcode & MLX4_CQE_OWNER_MASK,
-			cons_index & size) && (done < budget)) {
+			cons_index & size)) {
 		/*
 		 * make sure we read the CQE after we read the
 		 * ownership bit
@@ -377,7 +376,7 @@ static int mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq,
 					priv, ring, ring_index,
 					!!((ring->cons + txbbs_skipped) &
 							ring->size));
-		} while ((++done < budget) && (ring_index != new_index));
+		} while (ring_index != new_index);
 
 		++cons_index;
 		index = cons_index & size_mask;
@@ -403,7 +402,6 @@ static int mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq,
 			priv->port_stats.wake_queue++;
 		}
 	}
-	return done;
 }
 
 void mlx4_en_tx_irq(struct mlx4_cq *mcq)
@@ -411,30 +409,8 @@ void mlx4_en_tx_irq(struct mlx4_cq *mcq)
 	struct mlx4_en_cq *cq = container_of(mcq, struct mlx4_en_cq, mcq);
 	struct mlx4_en_priv *priv = netdev_priv(cq->dev);
 
-	if (priv->port_up)
-		napi_schedule(&cq->napi);
-	else
-		mlx4_en_arm_cq(priv, cq);
-}
-
-/* TX CQ polling - called by NAPI */
-int mlx4_en_poll_tx_cq(struct napi_struct *napi, int budget)
-{
-	struct mlx4_en_cq *cq = container_of(napi, struct mlx4_en_cq, napi);
-	struct net_device *dev = cq->dev;
-	struct mlx4_en_priv *priv = netdev_priv(dev);
-	int done;
-
-	done = mlx4_en_process_tx_cq(dev, cq, budget);
-
-	/* If we used up all the quota - we're probably not done yet... */
-	if (done < budget) {
-		/* Done for now */
-		napi_complete(napi);
-		mlx4_en_arm_cq(priv, cq);
-		return done;
-	}
-	return budget;
+	mlx4_en_process_tx_cq(cq->dev, cq);
+	mlx4_en_arm_cq(priv, cq);
 }
 
 static struct mlx4_en_tx_desc*
diff --git a/drivers/net/mlx4/mlx4_en.h b/drivers/net/mlx4/mlx4_en.h
index 3bf3d04..f730969 100644
--- a/drivers/net/mlx4/mlx4_en.h
+++ b/drivers/net/mlx4/mlx4_en.h
@@ -256,7 +256,6 @@ struct mlx4_en_tx_desc {
 
 #define MLX4_EN_USE_SRQ		0x01000000
 
-#define MLX4_EN_TX_BUDGET 64
 #define MLX4_EN_RX_BUDGET 64
 #define MLX4_EN_RX_LIMIT 1024
 
@@ -638,7 +637,6 @@ int mlx4_en_process_rx_cq(struct net_device *dev,
 			  struct mlx4_en_cq *cq,
 			  int budget);
 int mlx4_en_poll_rx_cq(struct napi_struct *napi, int budget);
-int mlx4_en_poll_tx_cq(struct napi_struct *napi, int budget);
 void mlx4_en_fill_qp_context(struct mlx4_en_priv *priv, int size, int stride,
 			     int is_tx, int rss, int qpn, int cqn,
 			     struct mlx4_qp_context *context);
